<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algo on Mozart&#39;s Sheet</title>
    <link>/categories/algo/</link>
    <description>Recent content in Algo on Mozart&#39;s Sheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} a2htray. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 25 Mar 2023 18:46:30 +0800</lastBuildDate><atom:link href="/categories/algo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PAT 乙级 1044</title>
      <link>/posts/pat-basic-level/1044/</link>
      <pubDate>Sat, 25 Mar 2023 18:46:30 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1044/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1044 &amp;#34;&amp;#34;&amp;#34; mars_digits = [ &amp;#39;tret&amp;#39;, &amp;#39;jan&amp;#39;, &amp;#39;feb&amp;#39;, &amp;#39;mar&amp;#39;, &amp;#39;apr&amp;#39;, &amp;#39;may&amp;#39;, &amp;#39;jun&amp;#39;, &amp;#39;jly&amp;#39;, &amp;#39;aug&amp;#39;, &amp;#39;sep&amp;#39;, &amp;#39;oct&amp;#39;, &amp;#39;nov&amp;#39;, &amp;#39;dec&amp;#39;, ] mars_carries = [ &amp;#39;tam&amp;#39;, &amp;#39;hel&amp;#39;, &amp;#39;maa&amp;#39;, &amp;#39;huh&amp;#39;, &amp;#39;tou&amp;#39;, &amp;#39;kes&amp;#39;, &amp;#39;hei&amp;#39;, &amp;#39;elo&amp;#39;, &amp;#39;syy&amp;#39;, &amp;#39;lok&amp;#39;, &amp;#39;mer&amp;#39;, &amp;#39;jou&amp;#39;, ] def is_earth(s: str): return s.isdigit() def is_mars(s: str): return not is_earth(s) def to_earth(s: str): tokens</description>
    </item>
    
    <item>
      <title>PAT 乙级 1043</title>
      <link>/posts/pat-basic-level/1043/</link>
      <pubDate>Sat, 25 Mar 2023 15:50:40 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1043/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1043 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: line = input() nums = [0] * 6 chars = [&amp;#39;P&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;s&amp;#39;, &amp;#39;t&amp;#39;] for c in line: if c == &amp;#39;P&amp;#39;: nums[0] += 1 if c == &amp;#39;A&amp;#39;: nums[1] += 1 if c == &amp;#39;T&amp;#39;: nums[2] += 1 if c ==</description>
    </item>
    
    <item>
      <title>PAT 乙级 1042</title>
      <link>/posts/pat-basic-level/1042/</link>
      <pubDate>Sat, 25 Mar 2023 15:30:03 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1042/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1042 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: line = input() stat = [0] * 26 for c in line: if ord(&amp;#39;a&amp;#39;) &amp;lt;= ord(c) &amp;lt;= ord(&amp;#39;z&amp;#39;): stat[ord(c) - ord(&amp;#39;a&amp;#39;)] += 1 if ord(&amp;#39;A&amp;#39;) &amp;lt;= ord(c) &amp;lt;= ord(&amp;#39;Z&amp;#39;): stat[ord(c) - ord(&amp;#39;A&amp;#39;)] += 1 max_num = max(stat) print(chr(ord(&amp;#39;a&amp;#39;) + stat.index(max_num)), max_num)</description>
    </item>
    
    <item>
      <title>PAT 乙级 1041</title>
      <link>/posts/pat-basic-level/1041/</link>
      <pubDate>Sat, 25 Mar 2023 15:07:42 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1041/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1041 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: n = int(input()) student_dict = {} for _ in range(n): tokens = input().split(&amp;#39; &amp;#39;) student_dict[tokens[1]] = [tokens[0], tokens[2]] _ = input() nums = input().split(&amp;#39; &amp;#39;) for num in nums: print(&amp;#39; &amp;#39;.join(student_dict[num]))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1040</title>
      <link>/posts/pat-basic-level/1040/</link>
      <pubDate>Sat, 25 Mar 2023 14:56:07 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1040/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1039 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: line = input() num_t = 0 num_at = 0 num_pat = 0 for i in range(len(line) - 1, -1, -1): if line[i] == &amp;#39;T&amp;#39;: num_t += 1 if num_t != 0 and line[i] == &amp;#39;A&amp;#39;: num_at += num_t if num_at != 0 and line[i]</description>
    </item>
    
    <item>
      <title>PAT 乙级 1039</title>
      <link>/posts/pat-basic-level/1039/</link>
      <pubDate>Sat, 25 Mar 2023 14:27:25 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1039/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/25 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1039 &amp;#34;&amp;#34;&amp;#34; def color_stat(s): stat = {} for c in s: if c not in stat: stat[c] = 0 stat[c] = stat[c] + 1 return stat if __name__ == &amp;#39;__main__&amp;#39;: line1 = input() line2 = input() stat1 = color_stat(line1) stat2 = color_stat(line2) absent = 0 for color, num in stat2.items():</description>
    </item>
    
    <item>
      <title>PAT 乙级 1038</title>
      <link>/posts/pat-basic-level/1038/</link>
      <pubDate>Thu, 23 Mar 2023 23:52:27 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1038/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/13 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1038 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: n = int(input()) scores = {} for score in input().split(&amp;#39; &amp;#39;): if score not in scores: scores[score] = 0 scores[score] += 1 counts = [] for score in input().split(&amp;#39; &amp;#39;)[1:]: if score in scores: counts.append(scores[score]) else: counts.append(&amp;#39;0&amp;#39;) print(&amp;#39; &amp;#39;.join(map(str, counts)))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1037</title>
      <link>/posts/pat-basic-level/1037/</link>
      <pubDate>Thu, 23 Mar 2023 23:52:23 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1037/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/13 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1037 &amp;#34;&amp;#34;&amp;#34; def get_gsk(s): return list(map(int, s.split(&amp;#39;.&amp;#39;))) if __name__ == &amp;#39;__main__&amp;#39;: gsk1, gsk2 = map(get_gsk, input().split(&amp;#39; &amp;#39;)) price1 = gsk1[0] * 17 * 29 + gsk1[1] * 29 + gsk1[2] price2 = gsk2[0] * 17 * 29 + gsk2[1] * 29 + gsk2[2] if price2 &amp;gt;= price1: flag = &amp;#39;&amp;#39;</description>
    </item>
    
    <item>
      <title>PAT 乙级 1036</title>
      <link>/posts/pat-basic-level/1036/</link>
      <pubDate>Thu, 23 Mar 2023 23:52:18 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1036/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/13 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1036 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: tokens = input().split(&amp;#39; &amp;#39;) n = int(tokens[0]) c = tokens[1] row_num = str(1.0 * n / 2) if &amp;#39;.&amp;#39; in row_num: num, fraction = row_num.split(&amp;#39;.&amp;#39;) if 5 &amp;lt;= int(fraction[0]) &amp;lt;= 9: num = int(num) + 1 else: num = int(num) else: num = int(row_num)</description>
    </item>
    
    <item>
      <title>PAT 乙级 1033</title>
      <link>/posts/pat-basic-level/1033/</link>
      <pubDate>Thu, 23 Mar 2023 23:49:46 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1033/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/13 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1033 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: bad_keys = input() shift_bad = &amp;#39;+&amp;#39; in bad_keys for v in input(): if v in bad_keys or v.upper() in bad_keys: continue if shift_bad and ord(&amp;#39;A&amp;#39;) &amp;lt;= ord(v) &amp;lt;= ord(&amp;#39;Z&amp;#39;): continue print(v, end=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>PAT 乙级 1031</title>
      <link>/posts/pat-basic-level/1031/</link>
      <pubDate>Sun, 12 Mar 2023 23:10:04 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1031/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/12 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1031 &amp;#34;&amp;#34;&amp;#34; weights = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2] m = [&amp;#39;1&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;X&amp;#39;, &amp;#39;9&amp;#39;, &amp;#39;8&amp;#39;, &amp;#39;7&amp;#39;, &amp;#39;6&amp;#39;, &amp;#39;5&amp;#39;, &amp;#39;4&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;2&amp;#39;] def weight_sum(digits): total = 0 for i, digit in enumerate(digits): total += digit * weights[i] return</description>
    </item>
    
    <item>
      <title>PAT 乙级 1029</title>
      <link>/posts/pat-basic-level/1029/</link>
      <pubDate>Sun, 12 Mar 2023 23:05:13 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1029/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/12 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1029 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: statement1 = input() statement2 = input() got_dict = {} statement1 = statement1.upper() statement2 = statement2.upper() for c in statement1: if c not in got_dict: if c not in statement2: got_dict[c] = True print(c, end=&amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>PAT 乙级 1026</title>
      <link>/posts/pat-basic-level/1026/</link>
      <pubDate>Thu, 09 Mar 2023 23:50:37 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1026/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/9 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1026 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: start_clock, end_clock = map(int, input().split(&amp;#39; &amp;#39;)) duration = 1.0 * (end_clock - start_clock) / 100 h = int(duration // 3600) m = int(duration % 3600 // 60) s = str(duration % 3600 % 60) tokens = s.split(&amp;#39;.&amp;#39;) add = 1 if int(tokens[1][0]) &amp;gt;= 5</description>
    </item>
    
    <item>
      <title>PAT 乙级 1024</title>
      <link>/posts/pat-basic-level/1024/</link>
      <pubDate>Wed, 08 Mar 2023 22:51:25 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1024/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/8 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1024 &amp;#34;&amp;#34;&amp;#34; from typing import List class SciNumber: def __init__(self, s: str): self.sign = &amp;#39;-&amp;#39; if s[0] == &amp;#39;-&amp;#39; else &amp;#39;&amp;#39; nums, exp = s[1:].split(&amp;#39;E&amp;#39;) self.nums = [v for v in nums] self.left_move = exp[0] == &amp;#39;-&amp;#39; self.exp = int(exp[1:]) # print(self.sign, self.nums, self.left_move, self.exp) def to_number(self) -&amp;gt; List[str]: if</description>
    </item>
    
    <item>
      <title>PAT 乙级 1023</title>
      <link>/posts/pat-basic-level/1023/</link>
      <pubDate>Wed, 08 Mar 2023 21:43:35 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1023/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/8 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1023 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: digits = [] for i, digit in enumerate(map(int, input().split(&amp;#39; &amp;#39;))): digits += [i] * digit digits.sort() if digits[0] != 0: print(&amp;#39;&amp;#39;.join(map(str, digits))) exit(0) for i, v in enumerate(digits): if v != 0: digits[0], digits[i] = digits[i], digits[0] break print(&amp;#39;&amp;#39;.join(map(str, digits)))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1021</title>
      <link>/posts/pat-basic-level/1021/</link>
      <pubDate>Wed, 08 Mar 2023 21:08:17 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1021/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/7 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1021 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: counts = [0] * 10 for s in input(): counts[int(s)] += 1 for i, count in enumerate(counts): if count != 0: print(&amp;#39;%d:%d&amp;#39; % (i, count))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1020</title>
      <link>/posts/pat-basic-level/1020/</link>
      <pubDate>Wed, 08 Mar 2023 21:08:14 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1020/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/6 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1020 &amp;#34;&amp;#34;&amp;#34; from functools import cmp_to_key class MoonCake: def __init__(self, num, total_price): self.num = num self.total_price = total_price self.unit_price = 1.0 * self.total_price / self.num def cmp(mooncake1, mooncake2): return -1 if mooncake1.unit_price &amp;gt; mooncake2.unit_price else 1 if __name__ == &amp;#39;__main__&amp;#39;: n_class, max_requirement = map(int, input().split(&amp;#39; &amp;#39;)) mooncakes = [] for</description>
    </item>
    
    <item>
      <title>PAT 乙级 1019</title>
      <link>/posts/pat-basic-level/1019/</link>
      <pubDate>Wed, 08 Mar 2023 21:08:10 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1019/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/6 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1019 &amp;#34;&amp;#34;&amp;#34; def get_sorted_nums(num_str): dn = 4 - len(num_str) for _ in range(dn): num_str = &amp;#39;0&amp;#39; + num_str nums = list(map(int, num_str)) nums.sort() return 1 * nums[0] + 10 * nums[1] + 100 * nums[2] + 1000 * nums[3], \ 1 * nums[3] + 10 * nums[2] + 100 *</description>
    </item>
    
    <item>
      <title>PAT 乙级 1018</title>
      <link>/posts/pat-basic-level/1018/</link>
      <pubDate>Wed, 08 Mar 2023 21:08:06 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1018/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/6 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1018 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: n = int(input()) first = [0, 0, 0] second = [0, 0, 0] first_win = 0 second_win = 0 alphabet = [&amp;#39;B&amp;#39;, &amp;#39;C&amp;#39;, &amp;#39;J&amp;#39;] for _ in range(n): p1, p2 = input().split() if p1 == &amp;#39;C&amp;#39; and p2 == &amp;#39;J&amp;#39;: first[1] += 1 first_win</description>
    </item>
    
    <item>
      <title>PAT 乙级 1022</title>
      <link>/posts/pat-basic-level/1022/</link>
      <pubDate>Wed, 08 Mar 2023 21:02:22 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1022/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/8 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1022 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: num1, num2, base = map(int, input().split(&amp;#39; &amp;#39;)) total = num1 + num2 if total == 0: print(0) exit(0) res = [] while total &amp;gt;= 1: res = [total % base] + res total = total // base if res[0] == 0: res = res[1:]</description>
    </item>
    
    <item>
      <title>PAT 乙级 1013</title>
      <link>/posts/pat-basic-level/1013/</link>
      <pubDate>Wed, 08 Mar 2023 20:47:11 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1013/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/3 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1013 &amp;#34;&amp;#34;&amp;#34; import math def is_prime(num): for i in range(2, int(math.sqrt(num)) + 1): if num % i == 0: return False return True if __name__ == &amp;#39;__main__&amp;#39;: nums_str = input().split(&amp;#39; &amp;#39;) m, n = int(nums_str[0]), int(nums_str[1]) prime_nums = [0] * n i = 0 num = 2 while i !=</description>
    </item>
    
    <item>
      <title>PAT 乙级 1009</title>
      <link>/posts/pat-basic-level/1009/</link>
      <pubDate>Wed, 08 Mar 2023 20:46:58 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1009/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/3 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1009 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: statement = input().split(&amp;#39; &amp;#39;) statement.reverse() print(&amp;#39; &amp;#39;.join(statement))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1007</title>
      <link>/posts/pat-basic-level/1007/</link>
      <pubDate>Wed, 08 Mar 2023 20:46:54 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1007/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/3 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1007 &amp;#34;&amp;#34;&amp;#34; import math def is_prime(n): prime = True for i in range(3, int(math.sqrt(n)) + 1): if n % i == 0: prime = False break return prime if __name__ == &amp;#39;__main__&amp;#39;: nums = [n for n in range(3, int(input()) + 1)] nums = [n for n in nums if</description>
    </item>
    
    <item>
      <title>PAT 乙级 1006</title>
      <link>/posts/pat-basic-level/1006/</link>
      <pubDate>Wed, 08 Mar 2023 20:46:43 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1006/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/3 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1006 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: chars = [*input()] chars.reverse() tail = [] for i in range(1, int(chars[0]) + 1): tail.append(str(i)) bs_list = [[], []] for i, char in enumerate(chars[1:]): if i == 0: bs_list[0] = [&amp;#39;S&amp;#39;] * int(char) else: bs_list[1] = [&amp;#39;B&amp;#39;] * int(char) print(&amp;#39;&amp;#39;.join(bs_list[1] + bs_list[0] + tail))</description>
    </item>
    
    <item>
      <title>PAT 乙级 1005</title>
      <link>/posts/pat-basic-level/1005/</link>
      <pubDate>Wed, 08 Mar 2023 20:46:39 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1005/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/2 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1005 &amp;#34;&amp;#34;&amp;#34; def compute_sequence(num): sequence = [] while num != 1: if num % 2 == 0: num = num // 2 else: num = (num * 3 + 1) // 2 sequence.append(num) return sequence if __name__ == &amp;#39;__main__&amp;#39;: sequences = [] n = int(input()) nums = [int(num) for num</description>
    </item>
    
    <item>
      <title>PAT 乙级 1004</title>
      <link>/posts/pat-basic-level/1004/</link>
      <pubDate>Wed, 08 Mar 2023 20:45:38 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1004/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/1 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1004 &amp;#34;&amp;#34;&amp;#34; def get_score(student): return student[2] if __name__ == &amp;#39;__main__&amp;#39;: n = int(input()) students = [] while n != 0: tokens = input().split(&amp;#39; &amp;#39;) students.append((tokens[0], tokens[1], int(tokens[2]))) n -= 1 students.sort(key=get_score) print(students[len(students) - 1][0], students[len(students) - 1][1]) print(students[0][0], students[0][1])</description>
    </item>
    
    <item>
      <title>PAT 乙级 1017</title>
      <link>/posts/pat-basic-level/1017/</link>
      <pubDate>Sun, 05 Mar 2023 23:28:59 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1017/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/5 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1017 &amp;#34;&amp;#34;&amp;#34; if __name__ == &amp;#39;__main__&amp;#39;: a, b = map(int, input().split(&amp;#39; &amp;#39;)) print(a // b, a % b)</description>
    </item>
    
    <item>
      <title>PAT 乙级 1016</title>
      <link>/posts/pat-basic-level/1016/</link>
      <pubDate>Sun, 05 Mar 2023 23:28:55 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1016/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/5 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1016 &amp;#34;&amp;#34;&amp;#34; def count(string, char): c = 0 for v in string: if v == char: c += 1 return c def pad(char, num): if num == 0: return &amp;#39;0&amp;#39; ret = &amp;#39;&amp;#39; while num != 0: ret += char num -= 1 return ret if __name__ == &amp;#39;__main__&amp;#39;: strings</description>
    </item>
    
    <item>
      <title>PAT 乙级 1015</title>
      <link>/posts/pat-basic-level/1015/</link>
      <pubDate>Sun, 05 Mar 2023 23:28:52 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1015/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/4 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1015 &amp;#34;&amp;#34;&amp;#34; from functools import cmp_to_key def sort_students(student1, student2): total1 = sum(student1[1:]) total2 = sum(student2[1:]) if total1 != total2: return -1 if total1 &amp;gt; total2 else 1 elif student1[1] != student2[1]: return -1 if student1[1] &amp;gt; student2[1] else 1 else: return -1 if int(student1[0]) &amp;gt; int(student2[1]) else 1 if __name__</description>
    </item>
    
    <item>
      <title>PAT 乙级 1014</title>
      <link>/posts/pat-basic-level/1014/</link>
      <pubDate>Sun, 05 Mar 2023 23:28:48 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1014/</guid>
      <description>代码 #!/usr/bin/env python # -*- coding: utf-8 -*- # author: a2htray # create date: 2023/3/4 &amp;#34;&amp;#34;&amp;#34; PAT 乙级 1014 &amp;#34;&amp;#34;&amp;#34; week_dict = { &amp;#39;A&amp;#39;: &amp;#39;MON&amp;#39;, &amp;#39;B&amp;#39;: &amp;#39;TUE&amp;#39;, &amp;#39;C&amp;#39;: &amp;#39;WED&amp;#39;, &amp;#39;D&amp;#39;: &amp;#39;THU&amp;#39;, &amp;#39;E&amp;#39;: &amp;#39;FRI&amp;#39;, &amp;#39;F&amp;#39;: &amp;#39;SAT&amp;#39;, &amp;#39;G&amp;#39;: &amp;#39;SUN&amp;#39;, } hour_dict = { &amp;#39;0&amp;#39;: &amp;#39;00&amp;#39;, &amp;#39;1&amp;#39;: &amp;#39;01&amp;#39;, &amp;#39;2&amp;#39;: &amp;#39;02&amp;#39;, &amp;#39;3&amp;#39;: &amp;#39;03&amp;#39;, &amp;#39;4&amp;#39;: &amp;#39;04&amp;#39;, &amp;#39;5&amp;#39;: &amp;#39;05&amp;#39;, &amp;#39;6&amp;#39;: &amp;#39;06&amp;#39;, &amp;#39;7&amp;#39;: &amp;#39;07&amp;#39;, &amp;#39;8&amp;#39;: &amp;#39;08&amp;#39;, &amp;#39;9&amp;#39;: &amp;#39;09&amp;#39;, &amp;#39;A&amp;#39;: &amp;#39;10&amp;#39;, &amp;#39;B&amp;#39;: &amp;#39;11&amp;#39;, &amp;#39;C&amp;#39;: &amp;#39;12&amp;#39;, &amp;#39;D&amp;#39;:</description>
    </item>
    
    <item>
      <title>PAT 乙级 1002</title>
      <link>/posts/pat-basic-level/1002/</link>
      <pubDate>Tue, 28 Feb 2023 20:52:15 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1002/</guid>
      <description>代码 # basic_1002.py chinese_pinyins = [ &amp;#39;ling&amp;#39;, &amp;#39;yi&amp;#39;, &amp;#39;er&amp;#39;, &amp;#39;san&amp;#39;, &amp;#39;si&amp;#39;, &amp;#39;wu&amp;#39;, &amp;#39;liu&amp;#39;, &amp;#39;qi&amp;#39;, &amp;#39;ba&amp;#39;, &amp;#39;jiu&amp;#39;, ] if __name__ == &amp;#39;__main__&amp;#39;: num_chars = input() total = 0 for num_char in num_chars: total += int(num_char) output = [] for num_char in str(total): output.append(chinese_pinyins[int(num_char)]) print(&amp;#39; &amp;#39;.join(output)) 运行 input: 1928374 output: san si</description>
    </item>
    
    <item>
      <title>PAT 乙级 1001</title>
      <link>/posts/pat-basic-level/1001/</link>
      <pubDate>Tue, 28 Feb 2023 20:34:14 +0800</pubDate>
      
      <guid>/posts/pat-basic-level/1001/</guid>
      <description>代码 # basic_1001.py if __name__ == &amp;#39;__main__&amp;#39;: n = int(input()) step = 0 while n != 1: if n % 2 == 0: n = n // 2 else: n = (3 * n + 1) // 2 step += 1 print(step) 运行 input: 100 output: 18</description>
    </item>
    
    <item>
      <title>CSIG 线上面试</title>
      <link>/posts/interview-csig/</link>
      <pubDate>Fri, 15 Apr 2022 11:24:13 +0800</pubDate>
      
      <guid>/posts/interview-csig/</guid>
      <description>&lt;p&gt;有幸搞了个 CSIG 的线上面试，感觉是“没什么感觉”，一般般吧，没过。&lt;/p&gt;
&lt;p&gt;前面介绍什么就不说了，我这边没突出什么工作亮点，然后就直接共享桌面写代码了。题目是编程实现一个由字符串数组表示的大数的除以 9 的计算，后面又追问了小数点后值如何保存，所以索性在线下实现也写了写。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
