<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Mozart&#39;s Sheet</title>
    <link>/categories/python/</link>
    <description>Recent content in Python on Mozart&#39;s Sheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} a2htray. All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 27 Feb 2023 22:46:29 +0800</lastBuildDate><atom:link href="/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis with Python（五） 哈希表操作</title>
      <link>/posts/redis-python/redis-python-hash/</link>
      <pubDate>Mon, 27 Feb 2023 22:46:29 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-hash/</guid>
      <description>&lt;p&gt;哈希表（hash）是 Redis 中重要的数据结构，本文通过示例演示如何使用 Python 完成对哈希表的操作，各方法调用分别对应着 Redis 的一个指令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HSET&lt;/li&gt;
&lt;li&gt;HGET&lt;/li&gt;
&lt;li&gt;HINCRBY&lt;/li&gt;
&lt;li&gt;HINCRBYFLOAT&lt;/li&gt;
&lt;li&gt;HSTRLEN&lt;/li&gt;
&lt;li&gt;HVALS&lt;/li&gt;
&lt;li&gt;HMSET&lt;/li&gt;
&lt;li&gt;HMGET&lt;/li&gt;
&lt;li&gt;HSETNX&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（四） 有序集合操作</title>
      <link>/posts/redis-python/redis-python-zset/</link>
      <pubDate>Sun, 26 Feb 2023 20:10:40 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-zset/</guid>
      <description>&lt;p&gt;zset 有序集合是 set 的补充，zset 中的元素都带有一个用于排序的分数，以下通过代码示例进行说明。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（三） 集合操作及运算</title>
      <link>/posts/redis-python/redis-python-set/</link>
      <pubDate>Sun, 26 Feb 2023 16:59:30 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-set/</guid>
      <description>&lt;p&gt;set 数据类型对应元素不重复的数据结构，在 Redis 中，set 数据类型是无序的，与之相对的有序集合 zset。本文内容分两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合操作&lt;/li&gt;
&lt;li&gt;集合运算&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（二） 字符串操作</title>
      <link>/posts/redis-python/redis-python-string/</link>
      <pubDate>Sun, 26 Feb 2023 14:47:07 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-string/</guid>
      <description>&lt;p&gt;string 是 Redis 中最基础的数据类型，由于它是二进制安全的，所以可以存储图片的二进制信息。本文通过 3 个部分介绍在 Python 下如何操作 Redis 的 string 数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常规字符串操作&lt;/li&gt;
&lt;li&gt;位运算操作&lt;/li&gt;
&lt;li&gt;数值操作&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（一） 列表操作</title>
      <link>/posts/redis-python/redis-python-list/</link>
      <pubDate>Sat, 25 Feb 2023 21:58:12 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-list/</guid>
      <description>&lt;p&gt;list 是 Redis 中操作比较频繁的数据结构，本文将结合 Python 对其进行相关操作并按“是否发生阻塞”分成两个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞指令&lt;/li&gt;
&lt;li&gt;阻塞指令&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>从字符串中创建 DataFrame</title>
      <link>/posts/python-pandas-create-dataframe-from-raw-string/</link>
      <pubDate>Thu, 17 Nov 2022 22:24:05 +0800</pubDate>
      
      <guid>/posts/python-pandas-create-dataframe-from-raw-string/</guid>
      <description>&lt;p&gt;一般情况下，你们会通过文件（CSV、Excel等） 或 Python 的内置结构（字典）来创建 DataFrame 对象。但有时，数据是字符串的形式，如何将其转换成
DataFrame 对象？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>创建 Pandas 的 Series 和 DataFrame </title>
      <link>/posts/python-pandas-series-dataframe/</link>
      <pubDate>Sat, 15 Oct 2022 19:25:04 +0800</pubDate>
      
      <guid>/posts/python-pandas-series-dataframe/</guid>
      <description>&lt;p&gt;Series 和 DataFrame 是 Pandas 中两种重要的数据结构，也是我们操作和分析的主要对象。其中 Series 是一种类似于数组、列表或表格中一列的
一维数据对象，DataFrame 则可以表示表格化的数据对象，可由多个 Series 对象组成。&lt;/p&gt;
&lt;p&gt;本文主要摘录 Series 和 DataFrame 两种数据结结构的创建方法以及一些注意事项。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Write Mumultiple Dataframes to Worksheets</title>
      <link>/posts/python-pandas-write-mumultiple-dataframes-to-worksheets/</link>
      <pubDate>Wed, 21 Sep 2022 00:01:28 +0800</pubDate>
      
      <guid>/posts/python-pandas-write-mumultiple-dataframes-to-worksheets/</guid>
      <description>&lt;p&gt;In normal work, I usually use &lt;code&gt;Pandas&lt;/code&gt; as my excel read/write utility.&lt;/p&gt;
&lt;p&gt;Here is an example for how to write multiple dataframes to worksheets. We need to use &lt;code&gt;pd.ExcelWriter&lt;/code&gt; method.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>扩展 Django forms.Field - 支持 default 属性</title>
      <link>/posts/python-django-parameter-validation-default/</link>
      <pubDate>Mon, 05 Sep 2022 22:22:13 +0800</pubDate>
      
      <guid>/posts/python-django-parameter-validation-default/</guid>
      <description>django.forms 包提供了 HTML 表单验证的功能，在没有使用 DRF 的情况下，无法合理地处理 API 传参的验证，其中传参验证中就缺少了参数默认值的设置。 层次结构 django.forms 包提供的 Field 类</description>
    </item>
    
    <item>
      <title>Python PAT 甲级 1003</title>
      <link>/posts/python-pat-1004/</link>
      <pubDate>Wed, 03 Aug 2022 00:33:33 +0800</pubDate>
      
      <guid>/posts/python-pat-1004/</guid>
      <description>PAT 甲级 1003 。 # -*- coding:utf-8 -*- if __name__ == &amp;#39;__main__&amp;#39;: # n 树中节点个数 # m 非叶子节点个数 n, m = list(map(int, input().strip().split(&amp;#39; &amp;#39;))) # 二维数组 # 元素的下标表示节点的 ID # 第 1 个元素不使用 tree = [[] for _ in range(n+1)] while</description>
    </item>
    
    <item>
      <title>Python PAT 甲级 1003</title>
      <link>/posts/python-pat-1003/</link>
      <pubDate>Mon, 01 Aug 2022 23:24:15 +0800</pubDate>
      
      <guid>/posts/python-pat-1003/</guid>
      <description>PAT 甲级 1003 。 # -*- coding:utf-8 -*- import sys MAX_INT = sys.maxsize if __name__ == &amp;#39;__main__&amp;#39;: # m 城市个数 # n 路径条数 # start 起始城市下标 # end 结束城市下标 m, n, start, end = map(int, input().strip().split(&amp;#39; &amp;#39;)) # nums_of_teams 各城市救援队的数量 nums_of_teams = list(map(int, input().strip().split(&amp;#39; &amp;#39;)))</description>
    </item>
    
    <item>
      <title>卡方检验 - 检验特征对是否相关</title>
      <link>/posts/python-chi-square-test/</link>
      <pubDate>Mon, 11 Apr 2022 18:57:39 +0800</pubDate>
      
      <guid>/posts/python-chi-square-test/</guid>
      <description>在本文开头，贴一段百科对卡方检验基本原理的介绍： 卡方检验就是统计样本的实际观测值与理论推断值之间的偏离程度，实际观测值与理论推断值之间的偏离</description>
    </item>
    
    <item>
      <title>帕尔默企鹅数据集测试</title>
      <link>/posts/python-palmer-archipelago-penguin-testing/</link>
      <pubDate>Mon, 11 Apr 2022 13:28:26 +0800</pubDate>
      
      <guid>/posts/python-palmer-archipelago-penguin-testing/</guid>
      <description>今天导师在群里分享了一个链接 23 个优秀的机器学习训练公共数据集，看了一下，决定对帕尔默企鹅数据集（Palmer Archipelago (Antarctica) penguin data）做一些分析。 数据</description>
    </item>
    
    <item>
      <title>Matplotlib bar 图常规编码</title>
      <link>/posts/python-matplotlib-bar-tips/</link>
      <pubDate>Tue, 05 Apr 2022 10:11:12 +0800</pubDate>
      
      <guid>/posts/python-matplotlib-bar-tips/</guid>
      <description>&lt;p&gt;每当有快速绘制图表的需求时，第一时间反应到的肯定是 Matplotlib，因为其官方提供了详细的 API 文档及示例。但是每次在编码时，总是时不时地需要查看文档，不利用于可视化快速成型。所以在本文中罗列一些 bar 图的快速实现，方便 Ctrl+C/V。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>k-means 基本原理及其实现</title>
      <link>/posts/data-analysis-kmeans/</link>
      <pubDate>Sat, 02 Apr 2022 13:27:02 +0800</pubDate>
      
      <guid>/posts/data-analysis-kmeans/</guid>
      <description>&lt;p&gt;k-means 算法是一种无监督的聚类算法，其优点是逻辑简单、易于实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 读写文件</title>
      <link>/posts/python-read-and-write-file/</link>
      <pubDate>Mon, 28 Mar 2022 13:28:47 +0800</pubDate>
      
      <guid>/posts/python-read-and-write-file/</guid>
      <description>&lt;p&gt;在开发过程中，开发者常常需要对文件执行读写操作，仅以此文记录读写文件的常规用法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
