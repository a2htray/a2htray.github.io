<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on Mozart&#39;s Sheet</title>
    <link>/categories/database/</link>
    <description>Recent content in Database on Mozart&#39;s Sheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} a2htray. All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 27 Feb 2023 22:46:29 +0800</lastBuildDate><atom:link href="/categories/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis with Python（五） 哈希表操作</title>
      <link>/posts/redis-python/redis-python-hash/</link>
      <pubDate>Mon, 27 Feb 2023 22:46:29 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-hash/</guid>
      <description>&lt;p&gt;哈希表（hash）是 Redis 中重要的数据结构，本文通过示例演示如何使用 Python 完成对哈希表的操作，各方法调用分别对应着 Redis 的一个指令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HSET&lt;/li&gt;
&lt;li&gt;HGET&lt;/li&gt;
&lt;li&gt;HINCRBY&lt;/li&gt;
&lt;li&gt;HINCRBYFLOAT&lt;/li&gt;
&lt;li&gt;HSTRLEN&lt;/li&gt;
&lt;li&gt;HVALS&lt;/li&gt;
&lt;li&gt;HMSET&lt;/li&gt;
&lt;li&gt;HMGET&lt;/li&gt;
&lt;li&gt;HSETNX&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>哈希表相关</title>
      <link>/doc-redis-commands/hash-related/</link>
      <pubDate>Sun, 26 Feb 2023 20:19:59 +0800</pubDate>
      
      <guid>/doc-redis-commands/hash-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与哈希表相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（四） 有序集合操作</title>
      <link>/posts/redis-python/redis-python-zset/</link>
      <pubDate>Sun, 26 Feb 2023 20:10:40 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-zset/</guid>
      <description>&lt;p&gt;zset 有序集合是 set 的补充，zset 中的元素都带有一个用于排序的分数，以下通过代码示例进行说明。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（三） 集合操作及运算</title>
      <link>/posts/redis-python/redis-python-set/</link>
      <pubDate>Sun, 26 Feb 2023 16:59:30 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-set/</guid>
      <description>&lt;p&gt;set 数据类型对应元素不重复的数据结构，在 Redis 中，set 数据类型是无序的，与之相对的有序集合 zset。本文内容分两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集合操作&lt;/li&gt;
&lt;li&gt;集合运算&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（二） 字符串操作</title>
      <link>/posts/redis-python/redis-python-string/</link>
      <pubDate>Sun, 26 Feb 2023 14:47:07 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-string/</guid>
      <description>&lt;p&gt;string 是 Redis 中最基础的数据类型，由于它是二进制安全的，所以可以存储图片的二进制信息。本文通过 3 个部分介绍在 Python 下如何操作 Redis 的 string 数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常规字符串操作&lt;/li&gt;
&lt;li&gt;位运算操作&lt;/li&gt;
&lt;li&gt;数值操作&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Redis with Python（一） 列表操作</title>
      <link>/posts/redis-python/redis-python-list/</link>
      <pubDate>Sat, 25 Feb 2023 21:58:12 +0800</pubDate>
      
      <guid>/posts/redis-python/redis-python-list/</guid>
      <description>&lt;p&gt;list 是 Redis 中操作比较频繁的数据结构，本文将结合 Python 对其进行相关操作并按“是否发生阻塞”分成两个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非阻塞指令&lt;/li&gt;
&lt;li&gt;阻塞指令&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>SQL 转义问题</title>
      <link>/posts/go-sql-escape/</link>
      <pubDate>Wed, 11 May 2022 13:49:39 +0800</pubDate>
      
      <guid>/posts/go-sql-escape/</guid>
      <description>&lt;p&gt;SQL 转义问题是指执行的 SQL 语句中包含了某些特定的字符，如单引号 &lt;code&gt;&#39;&lt;/code&gt;、反斜杠 &lt;code&gt;\&lt;/code&gt; 等，导致 SQL 语句不能正常执行。所以，我们应该在拼接 SQL 语句的过程中对特别的传入参数进行转义。&lt;/p&gt;
&lt;p&gt;环境信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;MySQL 8.0.28；&lt;/li&gt;
&lt;li&gt;Go 1.16.9 windows/amd64&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Go&amp;MySQL`max_allowed_packet`</title>
      <link>/posts/go-max-allowed-packet/</link>
      <pubDate>Sat, 30 Apr 2022 20:25:09 +0800</pubDate>
      
      <guid>/posts/go-max-allowed-packet/</guid>
      <description>&lt;p&gt;当发送给数据库的语句过大时，会报如下错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;panic: Error 1105: Parameter of prepared statement which is &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; through mysql_send_long_data&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; is longer than &lt;span class=&#34;s1&#34;&gt;&amp;#39;max_allowed_packet&amp;#39;&lt;/span&gt; bytes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从报错中可知，需要修改 &lt;code&gt;max_allowed_packet&lt;/code&gt; 选项的值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis 的 list 和 stream：异步记录请求信息</title>
      <link>/posts/go-redis-request-log-dumper/</link>
      <pubDate>Sat, 23 Apr 2022 19:05:01 +0800</pubDate>
      
      <guid>/posts/go-redis-request-log-dumper/</guid>
      <description>&lt;p&gt;在 Web 开发中，常常需要对请求信息进行记录，形成日志以便于后期评估应用的性能。请求信息通常包含客户端地址、请求的 URL、请求时间及请求执行时间。在程序中，可以以同步或异步的方式完成这一需求。同步方式是指请求信息写入日志文件后才返回数据给客户端，异步方式则是在返回数据之前以新线程或进程完成对请求信息的记录。开源的日志包有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Zap&lt;/a&gt;：出自 Uber 团队，以高性能著称；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rs/zerolog&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Zerolog&lt;/a&gt;：以易用性著称，支持 7 种日志级别；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sirupsen/logrus&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Logrus&lt;/a&gt;：兼容标准日志包格式，也是本人常用的日志包；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/apex/log&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;apex/log&lt;/a&gt;：受 Logrus 启发，简化操作后的 Logrus；&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/inconshreveable/log15&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt; Log15&lt;/a&gt;：日志可读性强；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;5 个日志包的详细介绍可以看&lt;a href=&#34;/posts/go-five-structured-logging-package/&#34;&gt;《5 种结构化 Go 日志包对比分析》&lt;/a&gt;这篇文章。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 设置存储引擎的 3 种方法</title>
      <link>/posts/mysql-set-storage-engine/</link>
      <pubDate>Thu, 21 Apr 2022 13:35:02 +0800</pubDate>
      
      <guid>/posts/mysql-set-storage-engine/</guid>
      <description>&lt;p&gt;在 MySQL 5.5 之前，默认存储引擎为 MyISAM，之后版本的默认存储引擎为 InnoDB。&lt;/p&gt;
&lt;p&gt;选择一个合适的存储引擎至关重要。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL 存储过程</title>
      <link>/posts/mysql-writing-procedure/</link>
      <pubDate>Tue, 19 Apr 2022 19:35:33 +0800</pubDate>
      
      <guid>/posts/mysql-writing-procedure/</guid>
      <description>&lt;p&gt;存储过程是存储在数据库中并且已经提前编译好的 SQL 语句集合，它是应用中数据操作的部分逻辑实现。MySQL 5 版本引入了这一设计，存储过程包含 3 个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;名称；&lt;/li&gt;
&lt;li&gt;参数列表；&lt;/li&gt;
&lt;li&gt;SQL 语句；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>MySQL 性能调优</title>
      <link>/posts/database-performance-tuning/</link>
      <pubDate>Thu, 14 Apr 2022 19:59:24 +0800</pubDate>
      
      <guid>/posts/database-performance-tuning/</guid>
      <description>&lt;p&gt;数据库是应用的数据存储中心，请求增多和数据量增大都会对数据库造成严重的影响，导致数据库服务性能偏低。所以归纳了个别优化点，后续有看到新的内容也会追加。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>集群相关</title>
      <link>/doc-redis-commands/cluster-related/</link>
      <pubDate>Sun, 10 Apr 2022 11:34:31 +0800</pubDate>
      
      <guid>/doc-redis-commands/cluster-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与服务相关的命令，集群的配置过程可参考&lt;a href=&#34;/posts/redis-cluster-deployment/&#34;&gt;《Redis 集群配置过程》&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis 集群配置过程</title>
      <link>/posts/redis-cluster-deployment/</link>
      <pubDate>Thu, 07 Apr 2022 14:07:35 +0800</pubDate>
      
      <guid>/posts/redis-cluster-deployment/</guid>
      <description>&lt;p&gt;Redis 集群是基于“主从复制”特性之上的分布式 Redis 版本，可提供高并发、高性能、高可用的数据库服务。Redis 集群突破了单台服务器的内存局限，集群中的每一个节点都可以存储数据，同时维护着 &amp;ldquo;key-node&amp;rdquo; 的映射表。本文记录了 3 主 3 从的 Redis 集群的配置过程，主要内容包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Redis 集群的配置过程；&lt;/li&gt;
&lt;li&gt;集群相关命令；&lt;/li&gt;
&lt;li&gt;Go 存取集群数据；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Redis 主从复制配置过程</title>
      <link>/posts/redis-master-slave-replication-deployment/</link>
      <pubDate>Wed, 30 Mar 2022 10:28:31 +0800</pubDate>
      
      <guid>/posts/redis-master-slave-replication-deployment/</guid>
      <description>&lt;p&gt;Redis 主从复制可以实现数据库的读写分离，即主节点负责接收写请求、从节点负责接收读请求，是高性能 Redis 服务的基础。所以配置 Redis 主从复制应当作为开发者的技能之一，后文内容包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单机配置一主二从的主从复制服务&lt;/li&gt;
&lt;li&gt;服务验证；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>服务相关</title>
      <link>/doc-redis-commands/server-related/</link>
      <pubDate>Wed, 30 Mar 2022 09:24:49 +0800</pubDate>
      
      <guid>/doc-redis-commands/server-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与服务相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>列表模拟栈和队列</title>
      <link>/doc-redis-commands/examples/stack-and-queue/</link>
      <pubDate>Sun, 27 Mar 2022 06:05:41 +0800</pubDate>
      
      <guid>/doc-redis-commands/examples/stack-and-queue/</guid>
      <description>&lt;p&gt;栈（Stack）和队列（Queue）是编程中常用的两种数据结构，下面通过 Redis 的列表（List）类型来实现栈和队列。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>键相关</title>
      <link>/doc-redis-commands/key-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:57:48 +0800</pubDate>
      
      <guid>/doc-redis-commands/key-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与 key 相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>/doc-redis-commands/introduction/</link>
      <pubDate>Sun, 27 Mar 2022 05:56:48 +0800</pubDate>
      
      <guid>/doc-redis-commands/introduction/</guid>
      <description>&lt;p&gt;Redis 是开源的、高性能的数据结构存储系统，在框架设计中常常被当作缓存服务器。不同于传统的关系型数据库（如 MySQL、PostgreSQL），Redis 将数据以键值对的方式存储于内存并且支持数据持久化。尽管 Redis 采用了单线程模型来处理请求，但其通过 I/O 多路复用技术做到了应用级别的异步，运行的性能也十分良好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>集合相关</title>
      <link>/doc-redis-commands/set-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:47:22 +0800</pubDate>
      
      <guid>/doc-redis-commands/set-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与集合相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>流相关</title>
      <link>/doc-redis-commands/stream-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:47:22 +0800</pubDate>
      
      <guid>/doc-redis-commands/stream-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与 stream 相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串相关</title>
      <link>/doc-redis-commands/string-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:47:22 +0800</pubDate>
      
      <guid>/doc-redis-commands/string-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与字符串值相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有序集合相关</title>
      <link>/doc-redis-commands/zset-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:45:52 +0800</pubDate>
      
      <guid>/doc-redis-commands/zset-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与有序集合相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>列表值相关</title>
      <link>/doc-redis-commands/list-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:32:39 +0800</pubDate>
      
      <guid>/doc-redis-commands/list-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与列表值相关的命令。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
