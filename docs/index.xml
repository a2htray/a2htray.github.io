<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mozart&#39;s Sheet</title>
    <link>/</link>
    <description>Recent content on Mozart&#39;s Sheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} a2htray. All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 11 Apr 2022 18:57:39 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis 主从复制配置过程</title>
      <link>/posts/redis-master-slave-replication-deployment/</link>
      <pubDate>Wed, 30 Mar 2022 10:28:31 +0800</pubDate>
      
      <guid>/posts/redis-master-slave-replication-deployment/</guid>
      <description>&lt;p&gt;Redis 主从复制可以实现数据库的读写分离，即主节点负责接收写请求、从节点负责接收读请求，是高性能 Redis 服务的基础。所以配置 Redis 主从复制应当作为开发者的技能之一，后文内容包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单机配置一主二从的主从复制服务&lt;/li&gt;
&lt;li&gt;服务验证；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>列表模拟栈和队列</title>
      <link>/doc-redis-commands/examples/stack-and-queue/</link>
      <pubDate>Sun, 27 Mar 2022 06:05:41 +0800</pubDate>
      
      <guid>/doc-redis-commands/examples/stack-and-queue/</guid>
      <description>&lt;p&gt;栈（Stack）和队列（Queue）是编程中常用的两种数据结构，下面通过 Redis 的列表（List）类型来实现栈和队列。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>集群相关</title>
      <link>/doc-redis-commands/cluster-related/</link>
      <pubDate>Sun, 10 Apr 2022 11:34:31 +0800</pubDate>
      
      <guid>/doc-redis-commands/cluster-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与服务相关的命令，集群的配置过程可参考&lt;a href=&#34;/posts/redis-cluster-deployment/&#34;&gt;《Redis 集群配置过程》&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>服务相关</title>
      <link>/doc-redis-commands/server-related/</link>
      <pubDate>Wed, 30 Mar 2022 09:24:49 +0800</pubDate>
      
      <guid>/doc-redis-commands/server-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与服务相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>有序集合相关</title>
      <link>/doc-redis-commands/zset-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:45:52 +0800</pubDate>
      
      <guid>/doc-redis-commands/zset-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与有序集合相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>集合相关</title>
      <link>/doc-redis-commands/set-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:41:15 +0800</pubDate>
      
      <guid>/doc-redis-commands/set-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与集合相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>列表值相关</title>
      <link>/doc-redis-commands/list-related/</link>
      <pubDate>Sun, 27 Mar 2022 05:32:39 +0800</pubDate>
      
      <guid>/doc-redis-commands/list-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与列表值相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符串值相关</title>
      <link>/doc-redis-commands/string-related/</link>
      <pubDate>Sun, 27 Mar 2022 04:59:49 +0800</pubDate>
      
      <guid>/doc-redis-commands/string-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与字符串值相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>键相关</title>
      <link>/doc-redis-commands/key-related/</link>
      <pubDate>Sun, 27 Mar 2022 04:59:48 +0800</pubDate>
      
      <guid>/doc-redis-commands/key-related/</guid>
      <description>&lt;p&gt;Redis 服务器中与 key 相关的命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>/doc-redis-commands/introduction/</link>
      <pubDate>Sun, 27 Mar 2022 05:56:48 +0800</pubDate>
      
      <guid>/doc-redis-commands/introduction/</guid>
      <description>Redis 是开源的、高性能的数据结构存储系统，在框架设计中常常被当作缓存服务器。不同于传统的关系型数据库（如 MySQL、PostgreSQL），Re</description>
    </item>
    
    <item>
      <title>卡方检验 - 检验特征对是否相关</title>
      <link>/posts/python-chi-square-test/</link>
      <pubDate>Mon, 11 Apr 2022 18:57:39 +0800</pubDate>
      
      <guid>/posts/python-chi-square-test/</guid>
      <description>在本文开头，贴一段百科对卡方检验基本原理的介绍： 卡方检验就是统计样本的实际观测值与理论推断值之间的偏离程度，实际观测值与理论推断值之间的偏离</description>
    </item>
    
    <item>
      <title>帕尔默企鹅数据集测试</title>
      <link>/posts/python-palmer-archipelago-penguin-testing/</link>
      <pubDate>Mon, 11 Apr 2022 13:28:26 +0800</pubDate>
      
      <guid>/posts/python-palmer-archipelago-penguin-testing/</guid>
      <description>今天导师在群里分享了一个链接 23 个优秀的机器学习训练公共数据集，看了一下，决定对帕尔默企鹅数据集（Palmer Archipelago (Antarctica) penguin data）做一些分析。 数据</description>
    </item>
    
    <item>
      <title>Go 内置的 RPC 包</title>
      <link>/posts/go-built-in-rpc-package/</link>
      <pubDate>Sun, 10 Apr 2022 16:37:30 +0800</pubDate>
      
      <guid>/posts/go-built-in-rpc-package/</guid>
      <description>在网络或 I/O 连接中，可以使用 net/rpc 包实现对一个对象的导出方法的调用，即远程过程调用（Remote Procedure Call，RPC）。通过向 RPC 服务注册一个对象，使</description>
    </item>
    
    <item>
      <title>Go 1.18 特性 - 泛型</title>
      <link>/posts/go-1.18-release-features/</link>
      <pubDate>Sun, 10 Apr 2022 12:11:38 +0800</pubDate>
      
      <guid>/posts/go-1.18-release-features/</guid>
      <description>&lt;p&gt;Go 1.18 在 2022 年 3 月 15 日发布，根据团队的&lt;a href=&#34;https://go.dev/blog/go1.18&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;博文&lt;/a&gt;介绍，1.18 版本包含 4 个重要特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;泛型&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;fuzzing；&lt;/li&gt;
&lt;li&gt;工作空间；&lt;/li&gt;
&lt;li&gt;20% 的性能提升；&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Protocol Buffer 减少传输数据的大小</title>
      <link>/posts/protocol-buffer-reduce-data-size/</link>
      <pubDate>Sat, 09 Apr 2022 15:01:17 +0800</pubDate>
      
      <guid>/posts/protocol-buffer-reduce-data-size/</guid>
      <description>&lt;p&gt;Protocol Buffer 的介绍与语法已在文章&lt;a href=&#34;/posts/protocol-buffer-syntax/&#34;&gt;《Protocol Buffer 语法》&lt;/a&gt;给出，本文则演示了 Protocol Buffer 如何减少了传输数据的大小。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Protocol Buffer 语法</title>
      <link>/posts/protocol-buffer-syntax/</link>
      <pubDate>Fri, 08 Apr 2022 16:33:52 +0800</pubDate>
      
      <guid>/posts/protocol-buffer-syntax/</guid>
      <description>Protocol Buffer（Protobuf） 是一种高效的数据结构序列化的机制，同时也是一种结构化数据的存储格式。 序列化与反序列化 序列化：将数据结构或对</description>
    </item>
    
    <item>
      <title>Matplotlib bar 图常规编码</title>
      <link>/posts/python-matplotlib-bar-tips/</link>
      <pubDate>Tue, 05 Apr 2022 10:11:12 +0800</pubDate>
      
      <guid>/posts/python-matplotlib-bar-tips/</guid>
      <description>&lt;p&gt;每当有快速绘制图表的需求时，第一时间反应到的肯定是 Matplotlib，因为其官方提供了详细的 API 文档及示例。但是每次在编码时，总是时不时地需要查看文档，不利用于可视化快速成型。所以在本文中罗列一些 bar 图的快速实现，方便 Ctrl+C/V。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>k-means 基本原理及其实现</title>
      <link>/posts/data-analysis-kmeans/</link>
      <pubDate>Sat, 02 Apr 2022 13:27:02 +0800</pubDate>
      
      <guid>/posts/data-analysis-kmeans/</guid>
      <description>&lt;p&gt;k-means 算法是一种无监督的聚类算法，其优点是逻辑简单、易于实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go 1.16 运行 Revel 项目</title>
      <link>/posts/go-revel-run-require-packages/</link>
      <pubDate>Thu, 31 Mar 2022 10:40:58 +0800</pubDate>
      
      <guid>/posts/go-revel-run-require-packages/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://revel.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Revel&lt;/a&gt; 是一个以高效率、高性能著称的 Go Web 框架，提供了路由、参数解析和验证、会话机制、模板机制、缓存和任务管理等诸多常用的 Web 开发功能。同时作为一个全栈的 MVC 框架， Revel 通过模块实现了组件的复用，因此可以大大提高开发者的效率。其高性能则是依托 Go 语言的性能，相信这个不必多说。但相较于其它职责相对单一的 Web 框架（如 Gin、go-restful），Revel 只能说是在保证性能的基础上尽可能地对开发者友好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>同源策略 Same-Origin Policy</title>
      <link>/posts/web-same-origin-policy/</link>
      <pubDate>Tue, 29 Mar 2022 15:56:02 +0800</pubDate>
      
      <guid>/posts/web-same-origin-policy/</guid>
      <description>&lt;p&gt;同源策略（Same-Origin Policy，SOP）是一种保护 Web 资源的安全机制，它限制了不同源之间的资源访问。需要说明的是，SOP 只作用于应用脚本，这意味着在 HTML 标签中可以引入不同源的图片、CSS 文件或动态加载的脚本文件（见&lt;a href=&#34;/posts/web-same-origin-policy/#%e9%aa%8c%e8%af%81-1&#34;&gt;验证 1&lt;/a&gt;）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python 读写文件</title>
      <link>/posts/python-read-and-write-file/</link>
      <pubDate>Mon, 28 Mar 2022 13:28:47 +0800</pubDate>
      
      <guid>/posts/python-read-and-write-file/</guid>
      <description>&lt;p&gt;在开发过程中，开发者常常需要对文件执行读写操作，仅以此文记录读写文件的常规用法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Offline</title>
      <link>/offline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/offline/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
